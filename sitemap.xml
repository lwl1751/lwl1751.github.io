<?xml version="1.0" encoding="UTF-8"?>
<urlset xmlns="http://www.sitemaps.org/schemas/sitemap/0.9">
  
  <url>
    <loc>https://lwl1751.github.io/2024/05/15/%E7%9F%A5%E8%AF%86%E5%BB%BA%E6%A8%A1%E4%B8%8E%E7%9F%A5%E8%AF%86%E8%9E%8D%E5%90%88/</loc>
    
    <lastmod>2024-06-02T11:22:16.943Z</lastmod>
    
    <date>1715754786000</date>
    <title>知识建模与知识融合 | Wenliang Liang</title>
    
    <desc></desc>
  </url>
  
  <url>
    <loc>https://lwl1751.github.io/2024/05/15/%E7%9F%A5%E8%AF%86%E6%8E%A8%E7%90%86/</loc>
    
    <lastmod>2024-06-02T11:18:30.998Z</lastmod>
    
    <date>1715754818000</date>
    <title>知识推理 | Wenliang Liang</title>
    
    <desc></desc>
  </url>
  
  <url>
    <loc>https://lwl1751.github.io/2024/06/02/%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1%E5%A4%84%E7%90%86/</loc>
    
    <lastmod>2024-06-02T07:23:31.114Z</lastmod>
    
    <date>1717313011000</date>
    <title>分布式事务处理 | Wenliang Liang</title>
    
    <desc></desc>
  </url>
  
  <url>
    <loc>https://lwl1751.github.io/2024/06/02/%E5%88%86%E5%B8%83%E5%BC%8F%E7%B3%BB%E7%BB%9F%E4%B8%AD%E7%9A%84%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/</loc>
    
    <lastmod>2024-06-02T07:23:14.307Z</lastmod>
    
    <date>1717312994000</date>
    <title>分布式系统中的数据处理 | Wenliang Liang</title>
    
    <desc></desc>
  </url>
  
  <url>
    <loc>https://lwl1751.github.io/2024/06/02/%E5%88%86%E5%B8%83%E5%BC%8F%E7%B3%BB%E7%BB%9F%E4%B8%AD%E7%9A%84%E6%95%85%E9%9A%9C%E5%A4%84%E7%90%86/</loc>
    
    <lastmod>2024-06-02T07:22:45.339Z</lastmod>
    
    <date>1717312965000</date>
    <title>分布式系统中的故障处理 | Wenliang Liang</title>
    
    <desc></desc>
  </url>
  
  <url>
    <loc>https://lwl1751.github.io/2024/06/02/%E5%88%86%E5%B8%83%E5%BC%8F%E7%B3%BB%E7%BB%9F%E4%B8%AD%E7%9A%84%E4%BA%A4%E4%BA%92%E5%A4%84%E7%90%86/</loc>
    
    <lastmod>2024-06-02T07:22:21.160Z</lastmod>
    
    <date>1717312941000</date>
    <title>分布式系统中的交互处理 | Wenliang Liang</title>
    
    <desc></desc>
  </url>
  
  <url>
    <loc>https://lwl1751.github.io/2024/06/02/%E5%88%86%E5%B8%83%E5%BC%8F%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1%E7%9A%84%E5%85%B3%E6%B3%A8%E7%82%B9/</loc>
    
    <lastmod>2024-06-02T07:22:00.327Z</lastmod>
    
    <date>1717312920000</date>
    <title>分布式系统设计的关注点 | Wenliang Liang</title>
    
    <desc></desc>
  </url>
  
  <url>
    <loc>https://lwl1751.github.io/2024/06/02/%E5%88%86%E5%B8%83%E5%BC%8F%E7%B3%BB%E7%BB%9F%E7%9A%84%E7%89%B9%E5%BE%81/</loc>
    
    <lastmod>2024-06-02T07:21:33.725Z</lastmod>
    
    <date>1717312893000</date>
    <title>分布式系统的特征 | Wenliang Liang</title>
    
    <desc></desc>
  </url>
  
  <url>
    <loc>https://lwl1751.github.io/2024/05/15/%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1%E6%95%B0%E6%8D%AE%E7%AE%A1%E7%90%86/</loc>
    
    <lastmod>2024-06-02T07:12:18.321Z</lastmod>
    
    <date>1715754767000</date>
    <title>知识图谱数据管理 | Wenliang Liang</title>
    
    <desc></desc>
  </url>
  
  <url>
    <loc>https://lwl1751.github.io/2024/05/15/%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1%E6%9E%84%E5%BB%BA/</loc>
    
    <lastmod>2024-06-02T06:06:42.629Z</lastmod>
    
    <date>1715754745000</date>
    <title>知识图谱构建 | Wenliang Liang</title>
    
    <desc></desc>
  </url>
  
  <url>
    <loc>https://lwl1751.github.io/2024/05/15/%E7%9F%A5%E8%AF%86%E8%8E%B7%E5%8F%96/</loc>
    
    <lastmod>2024-06-02T05:32:51.330Z</lastmod>
    
    <date>1715754676000</date>
    <title>知识获取 | Wenliang Liang</title>
    
    <desc></desc>
  </url>
  
  <url>
    <loc>https://lwl1751.github.io/2024/06/01/%E6%95%B0%E5%80%BC%E5%8C%96%E7%9F%A5%E8%AF%86%E8%A1%A8%E7%A4%BA/</loc>
    
    <lastmod>2024-06-01T13:40:47.682Z</lastmod>
    
    <date>1717237704000</date>
    <title>数值化知识表示 | Wenliang Liang</title>
    
    <desc></desc>
  </url>
  
  <url>
    <loc>https://lwl1751.github.io/2024/06/01/%E7%AC%A6%E5%8F%B7%E5%8C%96%E7%9F%A5%E8%AF%86%E8%A1%A8%E7%A4%BA/</loc>
    
    <lastmod>2024-06-01T12:44:11.979Z</lastmod>
    
    <date>1717237704000</date>
    <title>符号化知识表示 | Wenliang Liang</title>
    
    <desc></desc>
  </url>
  
  <url>
    <loc>https://lwl1751.github.io/2024/05/15/%E7%9F%A5%E8%AF%86%E8%AE%A1%E7%AE%97/</loc>
    
    <lastmod>2024-06-01T09:33:25.588Z</lastmod>
    
    <date>1715752943000</date>
    <title>知识计算 | Wenliang Liang</title>
    
    <desc></desc>
  </url>
  
  <url>
    <loc>https://lwl1751.github.io/2024/05/31/%E7%BE%A4%E4%BD%93%E6%99%BA%E8%83%BD/</loc>
    
    <lastmod>2024-05-31T13:05:54.413Z</lastmod>
    
    <date>1717140733000</date>
    <title>群体智能 | Wenliang Liang</title>
    
    <desc></desc>
  </url>
  
  <url>
    <loc>https://lwl1751.github.io/2024/05/15/%E6%B7%B1%E5%BA%A6%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/</loc>
    
    <lastmod>2024-05-30T15:43:38.310Z</lastmod>
    
    <date>1715752874000</date>
    <title>深度强化学习 | Wenliang Liang</title>
    
    <desc>强化学习从深度学习角度出发的挑战： 强化学习的奖励信号是有延迟的，而深度学习的输入输出是直接联系的 强化学习的序贯决策序列有很高的相关性，而深度学习的假设数据是独立同分布 强化学习的数据分布是会随着学习发生变化的，而深度学习的假设是底层分布固定的</desc>
  </url>
  
  <url>
    <loc>https://lwl1751.github.io/2024/05/15/%E5%9F%BA%E4%BA%8E%E7%AD%96%E7%95%A5%E6%A2%AF%E5%BA%A6%E7%9A%84%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/</loc>
    
    <lastmod>2024-05-30T12:21:28.527Z</lastmod>
    
    <date>1715752691000</date>
    <title>基于策略梯度的强化学习 | Wenliang Liang</title>
    
    <desc>强化学习可分为两大类： value-based method(DP,MC,TD) 通过价值函数求解最优策略，求解出来的策略是确定性的，虽然可以通过\(\epsilon\)-贪心策略来获取一定的随机性。要求动作空间离散。 policy-based method 适用场景：随机策略；动作空间连续。 优点：具有更好的收敛性质。 缺点：通常会收敛到局部最优而非全局最优；评估一个策略通常不够高效并且具有较大</desc>
  </url>
  
  <url>
    <loc>https://lwl1751.github.io/2024/05/15/%E6%97%A0%E6%A8%A1%E5%9E%8B%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/</loc>
    
    <lastmod>2024-05-30T12:01:26.698Z</lastmod>
    
    <date>1715752657000</date>
    <title>无模型强化学习 | Wenliang Liang</title>
    
    <desc>知识点 1.无模型价值学习评估 蒙特卡洛方法 时序差分学习 TD(𝝀) 2.无模型策略优化控制 蒙特卡洛策略迭代 时序差分策略迭代（SARSA） Q值迭代 (Q-learning)</desc>
  </url>
  
  <url>
    <loc>https://lwl1751.github.io/2024/05/15/%E6%90%9C%E7%B4%A2/</loc>
    
    <lastmod>2024-05-30T09:05:14.128Z</lastmod>
    
    <date>1715752902000</date>
    <title>搜索 | Wenliang Liang</title>
    
    <desc>知识点： 经典搜索算法：基于路径的搜索的问题。如盲目搜索，启发式搜索。 局部搜索算法：最优化问题，没有初始状态，也没有终止状；并不需要到达这些解的路径。如爬山法，元启发算法。 元启发式算法是启发式算法的改进，它是随机算法与局部搜索算法相结合的产物。如禁忌搜索算法(Tabu Search)，模拟退火算法(Simulated annealing)，遗传算法(Geneticalgorithm)。 对抗搜</desc>
  </url>
  
  <url>
    <loc>https://lwl1751.github.io/2024/05/15/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</loc>
    
    <lastmod>2024-05-30T09:00:54.762Z</lastmod>
    
    <date>1715752741000</date>
    <title>强化学习基础知识 | Wenliang Liang</title>
    
    <desc>知识点：马尔科夫决策过程，动态规划。</desc>
  </url>
  
  <url>
    <loc>https://lwl1751.github.io/2024/05/15/%E8%BF%9E%E7%BB%AD%E7%8A%B6%E6%80%81%E7%B3%BB%E7%BB%9F%E5%9F%BA%E4%BA%8E%E6%A8%A1%E5%9E%8B%E7%9A%84%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/</loc>
    
    <lastmod>2024-05-30T07:06:13.475Z</lastmod>
    
    <date>1715752850000</date>
    <title>连续状态系统基于模型的强化学习 | Wenliang Liang</title>
    
    <desc>对于大规模的MDP问题，不希望使用查表（Table Lookup）的方式，通过函数近似来估计实际的价值函数的方式，既节约了资源，又能达到泛化的效果。 \(\hat{v}(s,w) = v_\pi (s)\) \(\hat{q}(s,a,w) = q_\pi (s,a)\) \(\hat{\pi}(a,s,w) = \pi (a|s)\) 函数近似器 特征的线性组合 神经网络 决策树 最近邻方法 傅</desc>
  </url>
  
  <url>
    <loc>https://lwl1751.github.io/2024/05/15/%E5%A4%9A%E6%A8%A1%E6%80%81%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1%E5%BA%94%E7%94%A8/</loc>
    
    <lastmod>2024-05-30T06:29:42.295Z</lastmod>
    
    <date>1715758324000</date>
    <title>多模态知识图谱应用 | Wenliang Liang</title>
    
    <desc>相比于单模态知识图谱，多模态知识图谱能够综合多种类型的数据，从而可以让智能体更深入的感知和理解真实的数据场景，因而多模态知识图谱在各个领域都有广泛的应用。如图像检索、模型推理与生成、模型预训练等。以电子商务为例，通过多模态产品图谱，可以对产品进行更细致的表示，再通过预训练，可以增强大型模型对电子商务领域的多模态知识理解，从而推动电子商务平台的发展。</desc>
  </url>
  
  <url>
    <loc>https://lwl1751.github.io/2024/05/12/how-to-build-up-a-blog/</loc>
    
    <lastmod>2024-05-30T06:25:01.406Z</lastmod>
    
    <date>1715504622000</date>
    <title>how to build up a blog | Wenliang Liang</title>
    
    <desc></desc>
  </url>
  
  <url>
    <loc>https://lwl1751.github.io/2024/05/25/%E5%A4%A7%E6%A8%A1%E5%9E%8B%E7%9F%A5%E8%AF%86%E5%88%86%E6%9E%90%E3%80%81%E8%90%83%E5%8F%96%E4%B8%8E%E5%A2%9E%E5%BC%BA/</loc>
    
    <lastmod>2024-05-30T04:36:36.489Z</lastmod>
    
    <date>1716642890000</date>
    <title>大模型知识分析、萃取与增强 | Wenliang Liang</title>
    
    <desc>大模型中蕴含着大量的知识，但是知识的类型、数量和质量并不可控。 知识分析实验表明，大模型自发学到了一些世界知识、常识知识，这些知识隐式地存储于模型参数中。 课程考试复习使用。</desc>
  </url>
  
  <url>
    <loc>https://lwl1751.github.io/tags/index.html</loc>
    
    <lastmod>2024-05-29T16:34:38.198Z</lastmod>
    
    <date>1717000411000</date>
    <title>tags | Wenliang Liang</title>
    
    <desc></desc>
  </url>
  
  <url>
    <loc>https://lwl1751.github.io/2024/05/14/%E8%92%99%E7%89%B9%E5%8D%A1%E6%B4%9B%E6%A0%91%E6%90%9C%E7%B4%A2/</loc>
    
    <lastmod>2024-05-15T06:48:36.803Z</lastmod>
    
    <date>1715666450000</date>
    <title>蒙特卡洛树搜索 | Wenliang Liang</title>
    
    <desc></desc>
  </url>
  
</urlset>
